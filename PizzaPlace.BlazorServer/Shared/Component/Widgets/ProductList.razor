<ul class="menu-list">
    @foreach (var product in Products)
    {
        <li @onclick="@(()=>BodyClick(product))" class="border rounded @(product.DiscountedPrice == 0?"":"bg-discount") shadow-sm p-3 mt-3 menu-item">
            <div class="row justify-content-between">
                <div class="mt-2 m-lg-0 col-12 col-lg-9">
                    <h5><i class="fa-solid fa-pizza-slice"></i>&nbsp;@product.Name :</h5>
                    <div>@product.Ingredients </div>
                </div>

                <div class="mt-2 m-lg-0 col-12 col-lg-2">
                    <div class="d-flex align-items-center justify-content-end h-100">

                        <div class="fw-bolder @(product.DiscountedPrice != 0?"text-decoration-line-through":"") m-0 p-0">@product.Price$</div>

                        @if (product.DiscountedPrice != 0)
                        {
                            <div style="font-size: 1.2rem;" class="fw-bolder">&nbsp;&nbsp;@product.DiscountedPrice$</div>
                        }
                    </div>
                </div>

            </div>
        </li>
    }
</ul>

<PopupProductInfo OnHideCallback="@(()=>showProductPopup = false)" Show="showProductPopup" Product="selectedProduct" />


@code {
    bool showProductPopup = false;
    ProductDTO selectedProduct = new ProductDTO();

    [Parameter]
    public IEnumerable<ProductDTO> Products { get; set; } = new List<ProductDTO>();

    [Parameter]
    public EventCallback<ProductDTO> OnProductBodyClick { get; set; }

    async Task BodyClick(ProductDTO product)
    {
        selectedProduct = product;
        showProductPopup = true;
    }
}